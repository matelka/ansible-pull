#

#!/bin/bash
"
)

SCRIPTS_DIR="/home/maitelka/script/toCheck"

# Variables pour le rapport final
VARS_TOTAL=0
VARS_USED=0
VARS_UNUSED=0

# --- Étape 1 : Récupérer les variables et leur fichier d'origine ---
declare -A VARS
VARS_RAW_COUNT=0
for file in "${VAR_FILES[@]}"; do
    if [ -f "$file" ]; then
        file_vars=$(grep -oP '^[[:space:]]*export[[:space:]]+[A-Z_][A-Z0-9_]*' "$file" | awk '{print $NF}')
        while read -r var_name; do
            if [[ -n "$var_name" ]]; then
                if [[ -z "${VARS["$var_name"]}" ]]; then
                    VARS["$var_name"]="$file"
                    ((VARS_TOTAL++))
                fi
                ((VARS_RAW_COUNT++))
            fi
        done <<< "$file_vars"
    fi
done

# --- Étape 2 : Vérifier l'utilisation des variables ---
echo "--- Vérification des variables ---"
echo "## Variables qui SONT utilisées :"
echo "---------------------------------------------------"
for var_name in "${!VARS[@]}"; do
    IS_USED=false
    # Boucle sur tous les fichiers du répertoire à vérifier
    # On utilise find et une boucle pour une meilleure fiabilité
    find "$SCRIPTS_DIR" -type f | while read -r script_file; do
        # On vérifie que le fichier n'est PAS un de nos fichiers de variables
        IS_VAR_FILE=false
        for var_file in "${VAR_FILES[@]}"; do
            if [[ "$script_file" == "$var_file" ]]; then
                IS_VAR_FILE=true
                break
            fi
        done
        
        # Si le fichier n'est PAS un fichier de variable et qu'il contient la variable...
        if [ "$IS_VAR_FILE" = false ] && grep -q -D skip "$var_name" "$script_file" 2>/dev/null; then
            IS_USED=true
            break
        fi
    done
    
    # Affichage des résultats
    if [ "$IS_USED" = true ]; then
        echo "✅ $var_name (trouvé dans: ${VARS[$var_name]})"
        ((VARS_USED++))
    else
        ((VARS_UNUSED++))
    fi
done

echo "---"
echo "## Variables qui NE sont PAS utilisées :"
echo "---------------------------------------------------"
for var_name in "${!VARS[@]}"; do
    IS_USED=false
    find "$SCRIPTS_DIR" -type f | while read -r script_file; do
        IS_VAR_FILE=false
        for var_file in "${VAR_FILES[@]}"; do
            if [[ "$script_file" == "$var_file" ]]; then
                IS_VAR_FILE=true
                break
            fi
        done
        if [ "$IS_VAR_FILE" = false ] && grep -q -D skip "$var_name" "$script_file" 2>/dev/null; then
            IS_USED=true
            break
        fi
    done

    if [ "$IS_USED" = false ]; then
        echo "∆ $var_name"
    fi
done

# --- Étape 3 : Afficher le rapport final ---
echo "---------------------------------------------------"
echo "### Rapport de la vérification"
echo "Total de variables uniques      : $VARS_TOTAL"
echo "Doublons trouvés et traités     : $(( VARS_RAW_COUNT - VARS_TOTAL ))"
echo "Variables utilisées             : $VARS_USED"
echo "Variables non utilisées         : $VARS_UNUSED"
echo "---------------------------------------------------"
echo "Vérification terminée."
