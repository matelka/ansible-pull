"
)

# Directory containing the scripts to check
SCRIPTS_DIR="/home/maitelka/script/toCheck"

VARS_TOTAL=0
VARS_USED=0
VARS_UNUSED=0

echo "Checking variables defined in configuration files..."
echo "Searching for usage in: $SCRIPTS_DIR"
echo "---------------------------------------------------"

# Get exported variables from ALL files and store them in an associative array
declare -A VARS
VARS_RAW_COUNT=0

for file in "${VAR_FILES[@]}"; do
    if [ -f "$file" ]; then
        file_vars=$(grep -oP '^[[:space:]]*export[[:space:]]+[A-Z_][A-Z0-9_]*' "$file" | awk '{print $NF}')
        
        while read -r var_name; do
            if [[ -n "$var_name" ]]; then
                if [[ -z "${VARS["$var_name"]}" ]]; then
                    VARS["$var_name"]="$file"
                    ((VARS_TOTAL++))
                fi
                ((VARS_RAW_COUNT++))
            fi
        done <<< "$file_vars"
    else
        echo "Warning: File $file does not exist or is not accessible. It will be ignored."
    fi
done

# --- Section 1: Used variables ---
echo "## Used variables:"
echo "---------------------------------------------------"

# Build the list of exclude options
declare -a EXCLUDE_OPTS
for file in "${VAR_FILES[@]}"; do
    EXCLUDE_OPTS+=( "--exclude=$file" )
done

# Check each variable in the associative array
for var_name in "${!VARS[@]}"; do
    # Use array to pass arguments to grep to avoid `eval` issues
    if grep -R -q -D skip "${EXCLUDE_OPTS[@]}" "$var_name" "$SCRIPTS_DIR" 2>/dev/null; then
        echo "✅ $var_name (found in: ${VARS[$var_name]})"
        ((VARS_USED++))
    else
        ((VARS_UNUSED++))
    fi
done

# --- Section 2: Unused variables ---
echo "---"
echo "## Unused variables:"
echo "---------------------------------------------------"

for var_name in "${!VARS[@]}"; do
    if grep -R -q -D skip "${EXCLUDE_OPTS[@]}" "$var_name" "$SCRIPTS_DIR" 2>/dev/null; then
        : # Do nothing
    else
        echo "∆ $var_name"
    fi
done

echo "---------------------------------------------------"
echo "### Verification Stats"
echo "Total unique variables          : $VARS_TOTAL"
echo "Duplicates found and handled    : $(( VARS_RAW_COUNT - VARS_TOTAL ))"
echo "Used variables                  : $VARS_USED"
echo "Unused variables                : $VARS_UNUSED"
echo "---------------------------------------------------"
echo "Verification complete."
